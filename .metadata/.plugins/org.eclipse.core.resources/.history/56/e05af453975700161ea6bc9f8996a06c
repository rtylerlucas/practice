package chapter.nine;

import java.util.Deque;
import java.util.LinkedList;
import java.util.Queue;

/*
 * 9.12 Implement a queue with getMax API
 */
public class QueueWithMax{

	private Queue<Integer> queue = new LinkedList<>();
	private Deque<Integer> maxes = new LinkedList<>();
	
	public void enqueue(Integer a){
		queue.add(a);
		if(!maxes.isEmpty() && maxes.peek() < a){
			maxes = new LinkedList<>();
		}
		maxes.add(a);
	}
	
	public Integer dequeue(){
		if(queue.isEmpty())
			throw new IllegalStateException("dequeue: queue is empty");
		
		return queue.poll();
	}
	
	public int getMax(){
		return maxes.getFirst().intValue();
	}
	
	public static void main(String[] args){
		int a = 1;
		int b = 2; 
		int c = 3;
		
		QueueWithMax queue = new QueueWithMax();
		queue.enqueue(a);
		queue.enqueue(b);
		queue.enqueue(11);
		queue.enqueue(3);
		System.out.println(queue.getMax());
	}
}
